<Window 
    x:Class="JPMorrow.UI.Views.ExportSelectionView" 
    x:Name="WindowBase" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
    xmlns:Sys="clr-namespace:System;assembly=mscorlib" 
    xmlns:local="clr-namespace:JPMorrow.UI.Views" 
    SizeToContent="WidthAndHeight" 
    Height="Auto" Width="Auto" 
    ResizeMode="NoResize" WindowStyle="None" 
    WindowStartupLocation="CenterScreen" Title="ResetFileWindow" 
    FontSize="14" FontFamily="Segoe UI Light" Background="#252525" 
    mc:Ignorable="d">


    <Window.Resources>
        <SolidColorBrush x:Key="PrimaryColor" Color="#ff8800" />
        
        <Style x:Key="DGrids" TargetType="{x:Type DataGrid}">
            <Setter Property="SelectionMode" Value="Extended" />
            <Setter Property="FontFamily" Value="Consolas" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="900" />
            <Setter Property="Width" Value="auto" />
            <Setter Property="Height" Value="auto" />
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="AlternatingRowBackground" Value="Gainsboro" />
            <Setter Property="BorderBrush" Value="Maroon" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="False" />
        </Style>

        <Style x:Key="DGSel" TargetType="DataGridRow">
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Background" Value="Maroon"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Sys:String x:Key="Title">Export Selection</Sys:String><!-- Row titles -->
        <Sys:String x:Key="Title_Bar">0</Sys:String>
        <Sys:String x:Key="Header_Text_Row">1</Sys:String>
        <Sys:String x:Key="List_Tabs">2</Sys:String>
        <Sys:String x:Key="Datagrid_Size">300</Sys:String>

        <Style x:Key="ButtonHoverNav" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="bg" Background="{TemplateBinding Background}" Width="30" Height="30" BorderThickness="0">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Gray" TargetName="bg"/>
                    </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    <Style x:Key="MarathonRed" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="5" BorderBrush="{StaticResource PrimaryColor}" Width="auto" Height="auto">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    <Style x:Key="RunCells" TargetType="DataGridCell">
      <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
      <Setter Property="Width" Value="auto"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type DataGridCell}">
            <Grid Background="{TemplateBinding Background}">
              <ContentPresenter VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Column.Header}" Value="From"/>
                  <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" Value="UNSET"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="Red"/>
                <Setter Property="Foreground" Value="White"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Column.Header}" Value="To"/>
                  <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}" Value="UNSET"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="Red"/>
                <Setter Property="Foreground" Value="White"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Column.Header}" Value="Total Bends"/>
                  <Condition Binding="{Binding Under_Bends}" Value="false"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="Orange"/>
                <Setter Property="Foreground" Value="White"/>
              </MultiDataTrigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style TargetType="{x:Type Image}" x:Key="DropShadow">
      <Setter Property="Effect">
        <Setter.Value>
          <DropShadowEffect BlurRadius="20" ShadowDepth="5" Opacity="100" Color="Black">
	  </DropShadowEffect>
        </Setter.Value>
      </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="EnableWireSizeComboBox">
      <Setter Property="IsEnabled" Value="False"/>
      <Style.Triggers>
        <DataTrigger Binding="{Binding Sel_Wire_Generation_Type}" Value="1">
          <Setter Property="IsEnabled" Value="True"/>
        </DataTrigger>
      </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="EnableLoadComboBox">
      <Setter Property="IsEnabled" Value="False"/>
      <Style.Triggers>
        <DataTrigger Binding="{Binding Sel_Wire_Generation_Type}" Value="0">
          <Setter Property="IsEnabled" Value="True"/>
        </DataTrigger>
      </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="EnableWireSizeTextBox">
      <Setter Property="IsEnabled" Value="False"/>
      <Style.Triggers>
        <DataTrigger Binding="{Binding Sel_Wire_Generation_Type}" Value="1">
          <Setter Property="IsEnabled" Value="True"/>
        </DataTrigger>
      </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="EnableLoadTextBox">
      <Setter Property="IsEnabled" Value="False"/>
      <Style.Triggers>
        <DataTrigger Binding="{Binding Sel_Wire_Generation_Type}" Value="0">
          <Setter Property="IsEnabled" Value="True"/>
        </DataTrigger>
      </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="EnableWireSizeTextBlock">
      <Setter Property="Foreground" Value="Gray"/>
      <Style.Triggers>
        <DataTrigger Binding="{Binding Sel_Wire_Generation_Type}" Value="1">
          <Setter Property="Foreground" Value="White"/>
        </DataTrigger>
      </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="EnableLoadTextBlock">
      <Setter Property="Foreground" Value="Gray"/>
      <Style.Triggers>
        <DataTrigger Binding="{Binding Sel_Wire_Generation_Type}" Value="0">
          <Setter Property="Foreground" Value="White"/>
        </DataTrigger>
      </Style.Triggers>
    </Style>

    </Window.Resources><!-- Master Grid -->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>

            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="100"/>

            <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="65"/>
            <RowDefinition Height="30"/>

            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            
            <RowDefinition Height="30"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="40"/>

            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

        <Border Opacity="1" Grid.Column="0" Grid.Row="{Binding Source={StaticResource Title_Bar}}" Grid.ColumnSpan="7" MouseLeftButtonDown="WindowDrag" Height="65" Background="Gainsboro" Margin="0,0,0,5">
            <TextBlock Margin="20,0,0,0" FontSize="24" Text="{Binding Source={StaticResource Title}}" VerticalAlignment="center" Foreground="Gray"/>
        </Border>
        <Button Command="{Binding MasterCloseCmd}" CommandParameter="{Binding ElementName = WindowBase}" Style="{StaticResource ButtonHoverNav}" Background="Transparent" BorderThickness="0" Name="HelpButton" Grid.Column="3" Grid.Row="0" HorizontalAlignment="Right" Margin="0,0,0,0">
            <Image Source="./res/exit.png" Stretch="fill" VerticalAlignment="center"/>
        </Button>

        <TextBlock Text="Export Types: " FontSize="14" Foreground="White" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="7" VerticalAlignment="center"/>

        <CheckBox Name="ExportBranchBox" Margin="10,0,0,0" Foreground="White" Content="Export Branch" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" VerticalAlignment="center"/>
        <CheckBox Name="ExportDistributionBox" Margin="10,0,0,0" Foreground="White" Content="Export Distribution" Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="2" VerticalAlignment="center"/>
        <CheckBox Name="ExportLowVoltageBox" Margin="10,0,0,0" Foreground="White" Content="Export Low Voltage" Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="2" VerticalAlignment="center"/>
        <CheckBox Name="ExportHangerLaborBox" Margin="10,0,0,0" Foreground="White" Content="Export Hanger Labor" Grid.Column="1" Grid.Row="5" Grid.ColumnSpan="2" VerticalAlignment="center"/>
        <CheckBox Name="ExportConduitAndWireSizeOnlyBox" Margin="10,0,0,0" Foreground="White" Content="Export Conduit And Wire Size Only" Grid.Column="1" Grid.Row="6" Grid.ColumnSpan="2" VerticalAlignment="center"/>
        <CheckBox Name="ExportConduitOnlyBox" Margin="10,0,0,0" Foreground="White" Content="Export Conduit Only" Grid.Column="1" Grid.Row="7" Grid.ColumnSpan="2" VerticalAlignment="center"/>
        <CheckBox Name="ExportLegacyP3InWallBox" Margin="10,0,0,0" Foreground="White" Content="Export P3 In-Wall" Grid.Column="1" Grid.Row="8" Grid.ColumnSpan="2" VerticalAlignment="center"/>
        <CheckBox Name="ExportElecRoomBox" Margin="10,0,0,0" Foreground="White" Content="Export Electrical Room" Grid.Column="1" Grid.Row="9" Grid.ColumnSpan="2" VerticalAlignment="center"/>

        <TextBlock Text="Export File Options: " FontSize="14" Foreground="White" Grid.Column="1" Grid.Row="11" Grid.ColumnSpan="7" VerticalAlignment="center"/>
        <CheckBox Name="OpenExcelBox" Margin="10,0,0,0" Foreground="White" Content="Open Excel" Grid.Column="1" Grid.Row="12" Grid.ColumnSpan="1" VerticalAlignment="center"/>
        <CheckBox Name="OpenPDFBox" Margin="10,0,0,0" Foreground="White" Content="Open PDF" Grid.Column="2" Grid.Row="12" Grid.ColumnSpan="1" VerticalAlignment="center"/>
        <Button Name="ExportButton" Command="{Binding CloseCmd}" CommandParameter="{Binding ElementName = WindowBase}" Style="{StaticResource MarathonRed}" FontSize="16" Content="Export" Margin="0,0,0,0" BorderThickness="1" Width="auto" Height="auto" Grid.Column="1" Grid.Row="14" Grid.ColumnSpan="3"/>
    </Grid>
</Window>